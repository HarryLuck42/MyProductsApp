// Mocks generated by Mockito 5.4.4 from annotations
// in my_products/test/api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_products/model/local/local_product.dart' as _i4;
import 'package:my_products/model/request/product_request.dart' as _i7;
import 'package:my_products/model/response/base_response.dart' as _i8;
import 'package:my_products/model/response/product_response.dart' as _i3;
import 'package:my_products/service/api_repository.dart' as _i5;
import 'package:my_products/service/api_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProduct_1 extends _i1.SmartFake implements _i3.Product {
  _FakeProduct_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalProduct_2 extends _i1.SmartFake implements _i4.LocalProduct {
  _FakeLocalProduct_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRepository extends _i1.Mock implements _i5.ApiRepository {
  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  @override
  _i6.Future<List<_i3.Category>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i6.Future<List<_i3.Category>>.value(<_i3.Category>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i3.Category>>.value(<_i3.Category>[]),
      ) as _i6.Future<List<_i3.Category>>);

  @override
  _i6.Future<List<_i3.Product>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: _i6.Future<List<_i3.Product>>.value(<_i3.Product>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i3.Product>>.value(<_i3.Product>[]),
      ) as _i6.Future<List<_i3.Product>>);

  @override
  _i6.Future<_i3.Product> createProduct(_i7.ProductRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProduct,
          [request],
        ),
        returnValue: _i6.Future<_i3.Product>.value(_FakeProduct_1(
          this,
          Invocation.method(
            #createProduct,
            [request],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i3.Product>.value(_FakeProduct_1(
          this,
          Invocation.method(
            #createProduct,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.Product>);

  @override
  _i6.Future<_i8.BaseResponse?> updateProduct(
    String? id,
    _i7.ProductRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [
            id,
            request,
          ],
        ),
        returnValue: _i6.Future<_i8.BaseResponse?>.value(),
        returnValueForMissingStub: _i6.Future<_i8.BaseResponse?>.value(),
      ) as _i6.Future<_i8.BaseResponse?>);

  @override
  _i6.Future<_i8.BaseResponse?> deleteProduct(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [id],
        ),
        returnValue: _i6.Future<_i8.BaseResponse?>.value(),
        returnValueForMissingStub: _i6.Future<_i8.BaseResponse?>.value(),
      ) as _i6.Future<_i8.BaseResponse?>);
}

/// A class which mocks [ProductRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRequest extends _i1.Mock implements _i7.ProductRequest {
  @override
  set categoryId(String? _categoryId) => super.noSuchMethod(
        Invocation.setter(
          #categoryId,
          _categoryId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set sku(String? _sku) => super.noSuchMethod(
        Invocation.setter(
          #sku,
          _sku,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set description(String? _description) => super.noSuchMethod(
        Invocation.setter(
          #description,
          _description,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set weight(int? _weight) => super.noSuchMethod(
        Invocation.setter(
          #weight,
          _weight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set width(int? _width) => super.noSuchMethod(
        Invocation.setter(
          #width,
          _width,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set height(int? _height) => super.noSuchMethod(
        Invocation.setter(
          #height,
          _height,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set length(int? _length) => super.noSuchMethod(
        Invocation.setter(
          #length,
          _length,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set image(String? _image) => super.noSuchMethod(
        Invocation.setter(
          #image,
          _image,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set price(int? _price) => super.noSuchMethod(
        Invocation.setter(
          #price,
          _price,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i4.LocalProduct convert(String? id) => (super.noSuchMethod(
        Invocation.method(
          #convert,
          [id],
        ),
        returnValue: _FakeLocalProduct_2(
          this,
          Invocation.method(
            #convert,
            [id],
          ),
        ),
        returnValueForMissingStub: _FakeLocalProduct_2(
          this,
          Invocation.method(
            #convert,
            [id],
          ),
        ),
      ) as _i4.LocalProduct);
}
